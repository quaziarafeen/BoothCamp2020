<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="2" failed="0" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[Extent Report DirectoryC:\Users\Quazi\IdeaProjects\Shuvro\BootCampSelenium\Google\target\surefire-reports\html]]>
    </line>
  </reporter-output>
  <suite started-at="2020-02-21T20:47:44 EST" name="Test.TestPage" finished-at="2020-02-21T20:49:16 EST" duration-ms="92128">
    <groups>
    </groups>
    <test started-at="2020-02-21T20:47:44 EST" name="Command line test" finished-at="2020-02-21T20:49:16 EST" duration-ms="92128">
      <class name="Test.TestPage">
        <test-method is-config="true" signature="extentSetup(org.testng.ITestContext)[pri:0, instance:Test.TestPage@3d8314f0]" started-at="2020-02-21T20:47:43 EST" name="extentSetup" finished-at="2020-02-21T20:47:44 EST" duration-ms="235" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@4422dd48]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Extent Report DirectoryC:\Users\Quazi\IdeaProjects\Shuvro\BootCampSelenium\Google\target\surefire-reports\html]]>
            </line>
          </reporter-output>
        </test-method> <!-- extentSetup -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Test.TestPage@3d8314f0]" started-at="2020-02-21T20:47:44 EST" name="setUp" finished-at="2020-02-21T20:47:56 EST" duration-ms="12632" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://learn.letskodeit.com/p/practice]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:Test.TestPage@3d8314f0]" started-at="2020-02-21T20:47:56 EST" name="startExtent" finished-at="2020-02-21T20:47:56 EST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void Test.TestPage.searchFromDatabase() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="searchFromDatabase()[pri:0, instance:Test.TestPage@3d8314f0]" started-at="2020-02-21T20:47:56 EST" name="searchFromDatabase" finished-at="2020-02-21T20:48:27 EST" duration-ms="30815" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchFromDatabase -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:Test.TestPage@3d8314f0]" started-at="2020-02-21T20:48:27 EST" name="afterEachTestMethod" finished-at="2020-02-21T20:48:28 EST" duration-ms="1071" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchFromDatabase status=SUCCESS method=TestPage.searchFromDatabase()[pri:0, instance:Test.TestPage@3d8314f0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:Test.TestPage@3d8314f0]" started-at="2020-02-21T20:48:28 EST" name="cleanUp" finished-at="2020-02-21T20:48:28 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:Test.TestPage@3d8314f0]" started-at="2020-02-21T20:48:28 EST" name="setUp" finished-at="2020-02-21T20:48:40 EST" duration-ms="11474" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://learn.letskodeit.com/p/practice]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:Test.TestPage@3d8314f0]" started-at="2020-02-21T20:48:40 EST" name="startExtent" finished-at="2020-02-21T20:48:40 EST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void Test.TestPage.searchFromTable() throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="searchFromTable()[pri:0, instance:Test.TestPage@3d8314f0]" started-at="2020-02-21T20:48:40 EST" name="searchFromTable" finished-at="2020-02-21T20:49:15 EST" duration-ms="35336" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchFromTable -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:Test.TestPage@3d8314f0]" started-at="2020-02-21T20:49:15 EST" name="afterEachTestMethod" finished-at="2020-02-21T20:49:16 EST" duration-ms="776" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchFromTable status=SUCCESS method=TestPage.searchFromTable()[pri:0, instance:Test.TestPage@3d8314f0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:Test.TestPage@3d8314f0]" started-at="2020-02-21T20:49:16 EST" name="cleanUp" finished-at="2020-02-21T20:49:16 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="generateReport()[pri:0, instance:Test.TestPage@3d8314f0]" started-at="2020-02-21T20:49:16 EST" name="generateReport" finished-at="2020-02-21T20:49:16 EST" duration-ms="56" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
      </class> <!-- Test.TestPage -->
    </test> <!-- Command line test -->
  </suite> <!-- Test.TestPage -->
</testng-results>
